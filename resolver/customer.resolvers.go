package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"booking-flight-system/ent"
	"booking-flight-system/ent/member"
	graphql1 "booking-flight-system/graphql"
	"booking-flight-system/helper"
	"context"

	"entgo.io/contrib/entgql"
)

// CreateCustomer is the resolver for the create_customer field.
func (r *customerOpsResolver) CreateCustomer(ctx context.Context, obj *ent.CustomerOps, input ent.CustomerInput) (*ent.Customer, error) {
	if err := helper.StringValidation(input.Email, "[a-z0-9]+@[a-z]+\\.[a-z]{1,2}", "email"); err != nil {
		return nil, err
	}
	if err := helper.StringValidation(input.PhoneNumber, "[0]\\d{9}", "phone number"); err != nil {
		return nil, err
	}
	if err := helper.StringValidation(input.FullName, ".+", "full name"); err != nil {
		return nil, err
	}
	if err := helper.StringValidation(input.Cid, "\\d{8,}", "card identify number"); err != nil {
		return nil, err
	}
	customerRes, err := r.client.Customer.Create().SetEmail(input.Email).SetPhoneNumber(input.PhoneNumber).SetCid(input.Cid).SetFullName(input.FullName).Save(ctx)
	if err != nil {
		return nil, err
	}
	return customerRes, nil
}

// ListCustomers is the resolver for the list_customers field.
func (r *customerOpsResolver) ListCustomers(ctx context.Context, obj *ent.CustomerOps, after *entgql.Cursor[int], first *int, before *entgql.Cursor[int], last *int, orderBy *ent.CustomerOrder) (*ent.CustomerConnection, error) {
	_, err := r.memberTypeValidator.OneOf(ctx, member.MemberTypeAdmin)
	if err != nil {
		return nil, err
	}
	return r.client.Customer.Query().Paginate(ctx, after, first, before, last, ent.WithCustomerOrder(orderBy))
}

// Customer is the resolver for the customer field.
func (r *mutationResolver) Customer(ctx context.Context) (*ent.CustomerOps, error) {
	return &ent.CustomerOps{}, nil
}

// CustomerOps returns graphql1.CustomerOpsResolver implementation.
func (r *Resolver) CustomerOps() graphql1.CustomerOpsResolver { return &customerOpsResolver{r} }

type customerOpsResolver struct{ *Resolver }
