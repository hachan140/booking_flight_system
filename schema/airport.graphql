type AirportOps{
    create_airport(input:CreateAirportInput!): Airport! @goField(forceResolver: true)
    update_airport(id: Int!, input:UpdateAirportInput!): Airport! @goField(forceResolver: true)
    delete_airport(id: Int!): String @goField(forceResolver: true)
    find_airport_by_id(id: Int!): Airport! @goField(forceResolver: true)
    list_airports(after: Cursor, first: Int, before: Cursor, last: Int, orderBy: AirportOrder): AirportConnection! @goField(forceResolver: true)
}
type Mutation {
    airport: AirportOps! @goField(forceResolver: true)
}

type AirportConnection{
    edges: [AirportEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type AirportEdge{
    node: Airport
    cursor: Cursor!
}