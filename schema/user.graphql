#> type UserOps {
#>
#
#"""
#create a new user.
#"""
#create(input: CreateUserInput!): Token!
#@authorize(existUser: false)
#@goField(forceResolver: true)
#"""
#update an existing user.
#"""
#update(input: UpdateUserInput!): User!
#@authorize(existUser: true)
#@goField(forceResolver: true)
#"""
#deactive an existing user.
#"""
#deactive: User! @authorize(existUser: true) @goField(forceResolver: true)
#}
#
#extend type Mutation {
#"""
#The user field represents the operations that can be performed on a user.
#"""
#user: UserOps! @goField(forceResolver: true)
#}
#
#extend type Query {
#"""
#verify if a user exists.
#"""
#verifyUserExist(input: VerifyUserInput!): VerifyUserResult!
#}