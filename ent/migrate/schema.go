// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AirportsColumns holds the columns for the "airports" table.
	AirportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "lat", Type: field.TypeFloat64},
		{Name: "long", Type: field.TypeFloat64},
	}
	// AirportsTable holds the schema information for the "airports" table.
	AirportsTable = &schema.Table{
		Name:       "airports",
		Columns:    AirportsColumns,
		PrimaryKey: []*schema.Column{AirportsColumns[0]},
	}
	// BookingsColumns holds the columns for the "bookings" table.
	BookingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"SUCCESS", "CANCEL"}},
		{Name: "seat_type", Type: field.TypeEnum, Enums: []string{"EC", "BC"}},
		{Name: "is_round", Type: field.TypeBool, Default: false},
		{Name: "customer_id", Type: field.TypeInt, Nullable: true},
		{Name: "flight_id", Type: field.TypeInt, Nullable: true},
	}
	// BookingsTable holds the schema information for the "bookings" table.
	BookingsTable = &schema.Table{
		Name:       "bookings",
		Columns:    BookingsColumns,
		PrimaryKey: []*schema.Column{BookingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bookings_customers_has_booking",
				Columns:    []*schema.Column{BookingsColumns[7]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "bookings_flights_has_booking",
				Columns:    []*schema.Column{BookingsColumns[8]},
				RefColumns: []*schema.Column{FlightsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "phone_number", Type: field.TypeString, Unique: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "dob", Type: field.TypeTime, Nullable: true},
		{Name: "cid", Type: field.TypeString, Unique: true},
		{Name: "member_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customers_members_has_customer",
				Columns:    []*schema.Column{CustomersColumns[8]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FlightsColumns holds the columns for the "flights" table.
	FlightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "depart_at", Type: field.TypeTime},
		{Name: "land_at", Type: field.TypeTime},
		{Name: "available_ec_slot", Type: field.TypeInt},
		{Name: "available_bc_slot", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"SCHEDULED", "CANCELED", "DELAY", "LANDED", "FLYING"}, Default: "SCHEDULED"},
		{Name: "from_airport_id", Type: field.TypeInt, Nullable: true},
		{Name: "to_airport_id", Type: field.TypeInt, Nullable: true},
		{Name: "plane_id", Type: field.TypeInt, Nullable: true},
	}
	// FlightsTable holds the schema information for the "flights" table.
	FlightsTable = &schema.Table{
		Name:       "flights",
		Columns:    FlightsColumns,
		PrimaryKey: []*schema.Column{FlightsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "flights_airports_from_flight",
				Columns:    []*schema.Column{FlightsColumns[9]},
				RefColumns: []*schema.Column{AirportsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "flights_airports_to_flight",
				Columns:    []*schema.Column{FlightsColumns[10]},
				RefColumns: []*schema.Column{AirportsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "flights_planes_flights",
				Columns:    []*schema.Column{FlightsColumns[11]},
				RefColumns: []*schema.Column{PlanesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString, Unique: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "dob", Type: field.TypeTime, Nullable: true},
		{Name: "cid", Type: field.TypeString, Unique: true},
		{Name: "member_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"ADMIN", "MEMBER"}, Default: "MEMBER"},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
	}
	// PlanesColumns holds the columns for the "planes" table.
	PlanesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "economy_class_slots", Type: field.TypeInt64, Default: 0},
		{Name: "business_class_slots", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"BOOKED", "FREE"}, Default: "FREE"},
	}
	// PlanesTable holds the schema information for the "planes" table.
	PlanesTable = &schema.Table{
		Name:       "planes",
		Columns:    PlanesColumns,
		PrimaryKey: []*schema.Column{PlanesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AirportsTable,
		BookingsTable,
		CustomersTable,
		FlightsTable,
		MembersTable,
		PlanesTable,
	}
)

func init() {
	BookingsTable.ForeignKeys[0].RefTable = CustomersTable
	BookingsTable.ForeignKeys[1].RefTable = FlightsTable
	CustomersTable.ForeignKeys[0].RefTable = MembersTable
	FlightsTable.ForeignKeys[0].RefTable = AirportsTable
	FlightsTable.ForeignKeys[1].RefTable = AirportsTable
	FlightsTable.ForeignKeys[2].RefTable = PlanesTable
}
